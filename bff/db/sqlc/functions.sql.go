// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: functions.sql

package db

import (
	"context"
	"database/sql"
)

const createFunction = `-- name: CreateFunction :one
INSERT INTO functions(creator_id, name, language, timeout, file_ref)
VALUES (?, ?, ?, ?, ?)
RETURNING id, creator_id, name, language, timeout, file_ref, created_at
`

type CreateFunctionParams struct {
	CreatorID int64          `json:"creator_id"`
	Name      sql.NullString `json:"name"`
	Language  string         `json:"language"`
	Timeout   int64          `json:"timeout"`
	FileRef   string         `json:"file_ref"`
}

func (q *Queries) CreateFunction(ctx context.Context, arg CreateFunctionParams) (*Function, error) {
	row := q.queryRow(ctx, q.createFunctionStmt, createFunction,
		arg.CreatorID,
		arg.Name,
		arg.Language,
		arg.Timeout,
		arg.FileRef,
	)
	var i Function
	err := row.Scan(
		&i.ID,
		&i.CreatorID,
		&i.Name,
		&i.Language,
		&i.Timeout,
		&i.FileRef,
		&i.CreatedAt,
	)
	return &i, err
}
